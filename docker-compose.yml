version: "3.8"

services:
  msa_front:
    restart: unless-stopped
    container_name: msa_front
    image: ubiqube/msa2-front:a1b79c4d5319599bb0c91e76c33e1211dfd10fc7
    #command: ["/usr/local/bin/wait-for-it.sh -t 60 msa-api:8480 && nginx -g 'daemon off;'"]
    healthcheck:
      test: ["CMD-SHELL", "curl -k --fail https://localhost"]
    depends_on:
      - msa_api
      - msa_ui
      - camunda
      - msa_ai_ml
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 162
        published: 162
        protocol: udp
        mode: host
      - target: 69
        published: 69
        protocol: udp
        mode: host
      - "5200-5200:5200-5200/udp"
   #
    # uncomment one of the 2 sections below when installing a custom certificate 
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"
  db:
    restart: unless-stopped
    container_name: msa_db
    image: ubiqube/msa2-db:5e75c8e448b3c366ce514d00923128817fdb8d47
    command: postgres -c 'max_connections=800' -c 'max_prepared_transactions=100'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
    environment:
      POSTGRES_PASSWORD: my_db_password
      POSTGRES_DB: POSTGRESQL
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
    volumes:
      - "msa_db:/var/lib/postgresql/data"

  msa_api:
    restart: unless-stopped
    container_name: msa_api
    image: ubiqube/msa2-api:dd44fed2eb4c5aad044b8d96e8ac222523584f33
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8480"]
    depends_on:
      - db
      - msa_es
    environment:
      - "ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc="
    volumes:
      - "msa_api:/opt/ubi-jentreprise/generated/conf"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_dev:/opt/devops/"
      - "msa_api_logs:/opt/wildfly/logs/"
      - "msa_api_logs:/opt/wildfly/logs/processLog"
    networks:
      default:
        aliases:
          - "msa-api"

  msa_ui:
    restart: unless-stopped
    container_name: msa_ui
    image: ubiqube/msa2-ui:67c250251a26cd5e16d8937e3d84bfca903259d3
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
    depends_on:
      - msa_api
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_SCHEDULE_WORKFLOWS=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_AI_ML=true
    - FEATURE_WORKFLOW_OWNER=false

  msa_sms:
    restart: unless-stopped
    container_name: msa_sms
    image: ubiqube/msa2-sms:5a4e5155ef123e0475e7ee9ba7f39b1255360997
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    cap_add:
      - NET_ADMIN
    depends_on:
      - db
      - msa_es
      - msa_dev
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_svn:/opt/svnroot"

  msa_bud:
    restart: unless-stopped
    container_name: msa_bud
    image: ubiqube/msa2-bud:4b04ecff71a5009de004bc16e78d8b69a212d8ae
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-bud status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      - db
    volumes:
      - "msa_bud_logs:/opt/bud/logs/"

  msa_alarm:
    restart: unless-stopped
    container_name: msa_alarm
    image: ubiqube/msa2-alarm:d4255679b87051afc998cf791139b19b77b4f124
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-alarm status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      - db
      - msa_es
    environment:
      - "ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc="
    volumes:
      - "msa_sms_logs:/opt/sms/logs"
  
  msa_monitoring:
    restart: unless-stopped
    image: ubiqube/msa2-monitoring:4e6ef663e040933be108bc71627799134bda7d0b
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-poll status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      - db
      - msa_es
      - msa_dev
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_bulkfiles:/opt/sms/spool/parser"
      - "msa_sms_logs:/opt/sms/logs"

  camunda:
    restart: unless-stopped
    container_name: msa_camunda
    depends_on:
      - db
    image: ubiqube/msa2-camunda:e8cd089949cdf40b3bb40709b51fbc0edd213a04
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: 'jdbc:postgresql://db:5432/process-engine'
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      DB_VALIDATE_ON_BORROW: 'true'
      WAIT_FOR: 'db:5432'
      WAIT_FOR_TIMEOUT: 60

  msa_es:
    restart: unless-stopped
    container_name: msa_es
    image: ubiqube/msa2-es:fe57dfc7ecc70dff2feac67fc3b343bc5fbdba11
    healthcheck:
      test: ["CMD-SHELL", "test -f /home/install/init-done && curl -s -XGET -H 'Authorization: Basic c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc='  'http://localhost:9200/_cluster/health?pretty' | grep -q 'status.*green' || exit 1"]
      timeout: 2s
      retries: 10
      interval: 10s
      start_period: 30s 
    environment:
      - discovery.type=single-node
      - script.painless.regex.enabled=true
      - bootstrap.memory_lock=true
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - "msa_es:/usr/share/elasticsearch/data"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  msa_cerebro:
    restart: unless-stopped
    container_name: msa_cerebro
    image: ubiqube/msa2-cerebro:bc1ea10586035ad1c1fcb1e2145d049c1e3449fe
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_USER: cerebro
      BASIC_AUTH_PWD: "N@X{M4tfw'5%)+35"
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa_es:9200
    depends_on:
      - msa_es
    ports:
    - "9000:9000"
  
  msa_kibana:
    restart: unless-stopped
    container_name: msa_kibana
    image: ubiqube/msa2-kibana:ecf9e1e2c9a09df20b04689dcdfee50679de8c83
    depends_on:
      - msa_es
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://msa_es:9200
      - ELASTICSEARCH_HOSTS=http://msa_es:9200
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    networks:
      default:
        aliases:
          - "msa-kibana"
          
  msa_ai_ml:
    restart: unless-stopped
    container_name: msa_ai_ml
    image: ubiqube/msa2-ai-ml:63c7fab8c111b6cc85da049f45ebc6175a9b269a
    healthcheck:
      test: ["CMD-SHELL", "python /msa_proj/health_check.py"]
    ports:
      - "8000:8000"
    volumes:
      - "msa_ai_ml_db:/msa_proj/database"
    networks:
      default:
        aliases:
          - "msa-ai-ml"

  msa_dev:
    restart: unless-stopped
    container_name: msa_dev
    #build: ./lab/msa_dev
    image: ubiqube/msa2-linuxdev:fc6ad45c302eb1702a60a3bc331c8a07eac0fda6
    depends_on:
      - msa_es
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_dev:/opt/devops/"
      
  linux_me:
    restart: unless-stopped
    container_name: linux_me
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: ubiqube/msa2-linuxme:b831acacdef579420ee1abf70ef66655d969fcbb
    #build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2224:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    networks:
      default:
        ipv4_address: 172.20.0.101
    hostname: linux_me
    privileged: true

  linux_me_2:
    restart: unless-stopped
    container_name: linux_me_2
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: ubiqube/msa2-linuxme:b831acacdef579420ee1abf70ef66655d969fcbb
    #build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2225:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    networks:
      default:
        ipv4_address: 172.20.0.102
    hostname: linux_me_2
    privileged: true

volumes:
  msa_api:
  msa_db:
  msa_dev:
  msa_entities:
  msa_repository:
  msa_es:
  rrd_repository:
  msa_api_logs:
  msa_sms_logs:
  msa_bud_logs:
  msa_front:
  msa_svn:
  msa_ai_ml_db:
  msa_bulkfiles:

networks:
  default:
    name: quickstart_default
    ipam:
      config:
        - subnet: 172.20.0.0/24
    driver_opts:
      encrypted: "true"
